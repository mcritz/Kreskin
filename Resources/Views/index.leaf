<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<title>Kreskin #(name)</title>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.17.1/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.13/vue.min.js"></script>
</head>
<body>
<div class="container">
	<h1>KRZKN</h1>
    <h2>Hello, #(name)</h2>
</div>

<div id="predictions" class="container">
    <prediction-comp 
        v-for="prediction in predictions"
        v-bind:prediction="prediction"
        v-bind:key="prediction.id"
        v-on:reveal="update(prediction)"
    >
    </prediction-comp>
</div>

<script>
Vue.component('prediction-comp', {
    props: ['prediction'],
    template: 
        '<div v-model="prediction">\
            <h4>{{ prediction.title }}</h4>\
            <p>{{ prediction.premise }}</p>\
            <p>{{ prediction.description }}</p>\
            <button v-if="prediction.isRevealed == false" v-on:click="reveal">Show</button>\
            <button v-if="prediction.isRevealed == true" v-on:click="hide">Hide</button>\
        </div>',
    methods: {
        reveal: function(evt) {
            this.prediction.title = this.prediction.title + " (Updating)";
            this.prediction.isRevealed = true;
            this.$emit('reveal');
        },
        hide: function(evt) {
            this.prediction.title = this.prediction.title + " (Updating)";
            this.prediction.isRevealed = false;
            this.$emit('reveal');
        }
    }
});

var PredictionsView = new Vue({
    el: '\#predictions',
    data: {
        predictions: []
    },
    mounted: function () {
        var self = this;
        self.fetchData();
    },
    methods: {
        fetchData: function() {
            axios.get('/predictions').then(response => {
                this.predictions = response.data;
            });
        },
        ping: function(param) {
            console.log('clicked');
        },
        update: function(predix) {
            var self = this;
            var token = "Yx5tFfEgY9KAa+XklI1kFA==";
            axios.put('/predictions/' + predix.id,
            {
                isRevealed: predix.isRevealed
            },
            {
                headers: {
                    'Authorization' : 'Bearer ' + token
                }
            })
            .then(function (response) {
                self.fetchData();
            })
            .catch(function (error) {
                self.fetchData();
            });
        },
        reverseMessage: function () {
            this.message = this.message.split('').reverse().join('')
        }
    }
});
</script>
</body>
</html>
